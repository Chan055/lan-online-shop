// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
  PREFER_NOT_TO_SAY
}

enum Status {
  ACTIVE
  INACTIVE
  FREEZE
}

enum ProductStatus {
  AVAILABLE
  OUT_OF_STOCK
  DISCONTINUED
}

enum PaymentMethod {
  KPAY
  CBPAY
  AYAPAY
}

enum PaymentStatus {
  PENDING
  APPROVED
  REJECTED
  REFUNDED
}

model Otp {
  id            Int      @id @default(autoincrement())
  email         String   @unique @db.VarChar(52)
  otp           String
  rememberToken String
  verifyToken   String?
  count         Int      @default(0) @db.SmallInt
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  error         Int      @default(0) @db.SmallInt
}

model User {
  id              Int       @id @default(autoincrement())
  name            String?   @db.VarChar(52)
  email           String    @unique @db.VarChar(52)
  password        String
  birthDate       DateTime?
  address         String?
  role            Role      @default(USER)
  gender          Gender    @default(PREFER_NOT_TO_SAY)
  status          Status    @default(ACTIVE)
  lastLogin       DateTime?
  errorLoginCount Int       @default(0) @db.SmallInt
  randToken       String    @db.Text
  image           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  reviews         Review[]
  orders          Order[]
  Payment         Payment[]
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int      @db.SmallInt
  note      String
  userId    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Product {
  id          Int                @id @default(autoincrement())
  name        String             @db.VarChar(255)
  description String
  price       Decimal            @db.Decimal(10, 2)
  stock       Int                @default(0)
  status      ProductStatus      @default(AVAILABLE)
  categoryId  Int
  promotionId Int?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  category    Category           @relation(fields: [categoryId], references: [id])
  promotion   Promotion?         @relation(fields: [promotionId], references: [id])
  images      Image[]
  reviews     Review[]
  orders      ProductsOnOrders[]
}

model Category {
  id           Int       @id @default(autoincrement())
  description  String    @db.VarChar(255)
  productCount Int       @default(0)
  products     Product[]
}

model Image {
  id        Int     @id @default(autoincrement())
  path      String  @db.VarChar(255)
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Promotion {
  id        Int       @id @default(autoincrement())
  form      DateTime
  to        DateTime
  discount  Decimal   @db.Decimal(10, 2)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Order {
  id         Int                @id @default(autoincrement())
  code       String             @db.VarChar(52)
  totalPrice Decimal            @db.Decimal(10, 2)
  address    String
  userId     Int
  createdAt  DateTime           @default(now())
  updatedAt  DateTime           @updatedAt
  user       User               @relation(fields: [userId], references: [id])
  products   ProductsOnOrders[]
  Payment    Payment[]
}

model ProductsOnOrders {
  id        Int     @id @default(autoincrement())
  price     Decimal @db.Decimal(10, 2)
  quantity  Int     @db.SmallInt
  orderId   Int
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Payment {
  id        Int           @id @default(autoincrement())
  method    PaymentMethod
  image     String?
  status    PaymentStatus @default(PENDING)
  useerId   Int
  orerId    Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  order     Order         @relation(fields: [orerId], references: [id])
  user      User          @relation(fields: [useerId], references: [id])
}

model About {
  id                Int             @id @default(autoincrement())
  CustomerServiceId Int             @unique
  BusinessInquiryId Int             @unique
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  Article           Article[]
  customerService   CustomerService @relation(fields: [CustomerServiceId], references: [id])
  businessInquiry   BusinessInquiry @relation(fields: [BusinessInquiryId], references: [id])
}

model Article {
  id          Int      @id @default(autoincrement())
  headerName  String   @db.VarChar(255)
  description String
  aboutId     Int
  about       About    @relation(fields: [aboutId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CustomerService {
  id        Int      @id @default(autoincrement())
  email     String   @db.VarChar(52)
  phone     String   @db.VarChar(15)
  address   String
  fromDate  DateTime
  toDate    DateTime
  FromHour  String   @db.VarChar(5)
  toHour    String   @db.VarChar(5)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  About     About?
}

model BusinessInquiry {
  id        Int      @id @default(autoincrement())
  email     String   @db.VarChar(52)
  phone     String   @db.VarChar(15)
  address   String
  fromDate  DateTime
  toDate    DateTime
  FromHour  String   @db.VarChar(5)
  toHour    String   @db.VarChar(5)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  About     About?
}
